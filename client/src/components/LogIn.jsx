import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { connect } from 'react-redux'
import { Container, Form, Button, Alert, Row, Col } from 'react-bootstrap'

import { logIn } from '../actions/authAction'

import './LogIn.css'

class LogIn extends Component {
  constructor() {
    super()
    this.state = {
      email: '',
      password: '',
      errors: {},
    }

    this.handleChange = this.handleChange.bind(this)
    this.handleSubmit = this.handleSubmit.bind(this)
  }

  componentDidMount() {
    if (this.props.auth.isAuthenticated) {
      // if loged in, redirect to home / books:
      this.props.history.push('/')
    }
  }

  shouldComponentUpdate(nextProps, nextState) {
    if (nextProps.auth.isAuthenticated) {
      // once logged in, redirect user to their books homepage
      this.props.history.push('/allbooks')
    }

    // if(nextProps.errors) {
    //   this.setState({errors: nextProps.errors});
    // }
    return true
  }

  static propTypes = {
    email: PropTypes.string.isRequired,
    password: PropTypes.string.isRequired,
  }
  handleChange(e) {
    this.setState({ [e.target.name]: e.target.value })
  }

  hasError(key) {
    return this.state.errors[key]
  }

  handleSubmit(e) {
    e.preventDefault()

    //VALIDATE
    var errors = {}

    //email
    const expression = /\S+@\S+/
    var validEmail = expression.test(String(this.state.email).toLowerCase())

    if (!validEmail) {
      errors.email = 'Invalid email'
    }

    //password
    if (this.state.password === '') {
      errors.pass = 'Invalid password'
    }

    this.setState({
      errors: errors,
    })

    if (errors.length > 0) {
      return false
    } else {
      this.props.logIn({ ...this.state })
    }
  }

  render() {
    let alert
    if (this.props.errors.error) {
      alert = (
        <Alert key='1' variant='danger'>
          {this.props.errors.error}
        </Alert>
      )
    }
    return (
      <div className='login-wrapper'>
        <Container>
          <h3>Login</h3>
          <Row>
            <Col xs={12} sm={12} md={6} lg={6}>
              <Form>
                <Form.Group controlId='formBasicEmail'>
                  <Form.Label>Email address:</Form.Label>
                  <Form.Control
                    type='email'
                    name='email'
                    placeholder='Enter Email address'
                    value={this.state.email}
                    onChange={this.handleChange}
                  />
                  <div
                    className={
                      this.hasError('email') ? 'inline-errormsg' : 'hidden'
                    }
                  >
                    Please enter valid email
                  </div>
                </Form.Group>
                <Form.Group controlId='formBasicPassword'>
                  <Form.Label>Password:</Form.Label>
                  <Form.Control
                    type='password'
                    name='password'
                    placeholder='Enter Password'
                    value={this.state.password}
                    onChange={this.handleChange}
                  />
                  <div
                    className={
                      this.hasError('pass') ? 'inline-errormsg' : 'hidden'
                    }
                  >
                    Please enter password or match
                  </div>
                </Form.Group>
                {alert}
                <Button variant='primary' onClick={this.handleSubmit}>
                  Submit
                </Button>
              </Form>
            </Col>
            <Col xs={12} sm={12} md={6} lg={6}>
                <div className="svg-container">
                  
            <svg viewBox="0 0 1076 647" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="sign_in 1" clip-path="url(#clip0)">
<path id="Vector" d="M74.3508 607.007L137.782 515.868L74.3185 616.92L74.2815 627.289C69.7581 627.251 65.2803 627.104 60.8483 626.848C60.8281 624.494 66.2195 494.949 65.9903 492.605C66.3032 492.516 66.4788 480.353 66.6029 479.821L0.335724 380.227L66.6741 470.395L66.8719 473.06L70.8074 372.412L13.8436 269.345L71.2579 354.727C71.2793 353.358 73.9754 146.705 74.0019 145.43C74.0182 146.107 75.2556 309.885 75.2647 310.575L129.744 244.652L75.2125 324.74L74.934 414.82L125.49 327.712C62.3966 454.745 76.3595 410.291 74.748 478.152L148.184 356.86L74.6852 495.625L74.3508 607.007Z" fill="#D0CDE1"/>
<path id="Vector_2" d="M1044.75 619.38L1071.18 581.4L1044.73 623.511L1044.72 627.832C1042.83 627.816 1040.97 627.755 1039.12 627.648C1039.11 626.667 1041.36 572.683 1041.26 571.706C1041.39 571.669 1041.47 566.6 1041.52 566.378L1013.9 524.875L1041.55 562.45L1041.63 563.561L1043.27 521.619L1019.53 478.668L1043.46 514.249C1043.47 513.678 1044.59 427.561 1044.6 427.029C1044.61 427.312 1045.12 495.562 1045.13 495.849L1067.83 468.378L1045.11 501.753L1044.99 539.291L1066.06 502.991C1039.77 555.929 1045.58 537.404 1044.91 565.683L1075.52 515.138L1044.89 572.964L1044.75 619.38Z" fill="#D0CDE1"/>
<path id="Vector_3" d="M536 646.899C832.025 646.899 1072 637.497 1072 625.899C1072 614.301 832.025 604.899 536 604.899C239.975 604.899 0 614.301 0 625.899C0 637.497 239.975 646.899 536 646.899Z" fill="#D0CDE1"/>
<path id="Vector_4" d="M796 248.031H184V612.901H796V248.031Z" fill="#3F3D56"/>
<path id="Vector_5" d="M335.46 248.031C334.834 286.426 319.144 323.037 291.772 349.969C264.4 376.901 227.54 391.997 189.14 392.001C187.42 392.001 185.71 391.971 184 391.911V248.031H335.46Z" fill="#FF8D8D"/>
<path id="Vector_6" d="M519.937 612.9H461.73C463.92 606.944 467.885 601.803 473.09 598.172C478.294 594.54 484.487 592.593 490.834 592.593C497.18 592.593 503.373 594.54 508.578 598.172C513.782 601.803 517.747 606.944 519.937 612.9V612.9Z" fill="#FF8D8D"/>
<path id="Vector_7" d="M796 424.171V547.07C780.222 546.299 765.345 539.488 754.451 528.049C743.557 516.609 737.48 501.418 737.48 485.621C737.48 469.824 743.557 454.632 754.451 443.192C765.345 431.753 780.222 424.942 796 424.171V424.171Z" fill="#FF8D8D"/>
<path id="Vector_8" d="M683.57 380.615H297.49C287.532 380.615 279.459 388.688 279.459 398.646V398.646C279.459 408.604 287.532 416.677 297.49 416.677H683.57C693.529 416.677 701.601 408.604 701.601 398.646C701.601 388.688 693.529 380.615 683.57 380.615Z" fill="white"/>
<path id="Vector_9" d="M683.57 451.679H297.49C287.532 451.679 279.459 459.752 279.459 469.71V469.71C279.459 479.669 287.532 487.741 297.49 487.741H683.57C693.529 487.741 701.601 479.669 701.601 469.71C701.601 459.752 693.529 451.679 683.57 451.679Z" fill="white"/>
<path id="Vector_10" d="M683.57 522.743H571.628C561.67 522.743 553.597 530.816 553.597 540.774C553.597 550.733 561.67 558.806 571.628 558.806H683.57C693.529 558.806 701.601 550.733 701.601 540.774C701.601 530.816 693.529 522.743 683.57 522.743Z" fill="white"/>
<path id="Vector_11" d="M893.052 112.12C893.052 112.12 909.881 118.664 910.815 140.168C911.75 161.671 906.141 221.506 906.141 221.506C906.141 221.506 926.709 251.424 910.815 259.839C894.922 268.253 893.052 226.181 893.052 226.181L874.353 137.363C874.353 137.363 885.572 111.185 893.052 112.12Z" fill="#A0616A"/>
<path id="Vector_12" d="M721.025 181.304C721.025 181.304 680.823 207.482 678.953 186.914C677.083 166.346 691.107 85.9416 691.107 85.9416C691.107 85.9416 692.977 51.3491 712.61 59.7636C732.244 68.178 707.001 97.1608 707.001 97.1608L709.805 162.606L728.504 161.671L721.025 181.304Z" fill="#A0616A"/>
<path id="Vector_13" d="M785.535 205.613C785.535 205.613 662.124 159.801 668.669 213.092C675.213 266.383 707.001 333.698 707.001 333.698L718.22 351.462H741.593L726.634 255.164C726.634 255.164 779.925 285.082 795.819 280.407C795.819 280.407 816.388 417.842 823.867 428.126C831.346 438.41 844.435 562.756 844.435 562.756L856.59 577.715H879.963V367.356C879.963 367.356 920.165 236.465 889.312 229.921C858.459 223.376 785.535 205.613 785.535 205.613Z" fill="#2F2E41"/>
<path id="Vector_14" d="M715.415 339.308C715.415 339.308 709.805 329.023 700.456 339.308C691.107 349.592 668.668 361.746 668.668 361.746C668.668 361.746 620.052 372.965 659.319 382.315C698.586 391.664 703.261 382.315 703.261 382.315C703.261 382.315 709.805 384.184 715.415 386.054C721.025 387.924 757.487 381.38 757.487 375.77C757.487 370.16 745.108 336.636 740.078 341.712C735.049 346.787 715.415 339.308 715.415 339.308Z" fill="#2F2E41"/>
<path id="Vector_15" d="M858.381 568.461C858.381 568.461 844.596 557.108 841.352 560.352C838.109 563.595 821.08 585.489 821.08 585.489C821.08 585.489 775.67 620.357 817.026 626.034C858.381 631.71 855.948 616.303 855.948 616.303H868.923C870.544 616.303 892.438 606.572 891.627 602.518C890.817 598.464 881.086 565.402 877.842 567.742C874.599 570.082 858.381 568.461 858.381 568.461Z" fill="#2F2E41"/>
<path id="Vector_16" d="M733.179 76.5923C750.735 76.5923 764.966 62.3605 764.966 44.8047C764.966 27.2488 750.735 13.017 733.179 13.017C715.623 13.017 701.391 27.2488 701.391 44.8047C701.391 62.3605 715.623 76.5923 733.179 76.5923Z" fill="#A0616A"/>
<path id="Vector_17" d="M755.617 41.0649C755.617 41.0649 779.925 61.6334 796.754 61.6334C813.583 61.6334 772.446 99.9656 772.446 99.9656L735.984 67.243L755.617 41.0649Z" fill="#A0616A"/>
<path id="Vector_18" d="M764.966 99.9656L764.238 92.5999C764.238 92.5999 782.73 59.7636 788.34 56.9588C793.949 54.154 797.689 54.154 797.689 54.154C797.689 54.154 816.388 34.5204 836.956 44.8047C857.525 55.0889 906.141 120.534 906.141 120.534C906.141 120.534 871.548 123.339 876.223 150.452C876.223 150.452 910.815 239.27 901.466 240.205C892.117 241.14 864.069 234.596 835.086 247.685C806.103 260.774 793.014 252.359 793.014 252.359L778.055 203.743C778.055 203.743 750.008 187.849 750.942 173.825L710.273 192.056L714.013 157.464L738.788 128.948C738.788 128.948 734.114 125.209 764.966 99.9656Z" fill="#9E9EA3"/>
<path id="Vector_19" d="M703.938 48.2413C702.675 49.6453 701.091 50.7238 699.322 51.385C697.512 51.8956 695.231 51.2694 694.509 49.5322L695.853 47.7828L691.824 45.2789L693.58 43.2188L690.334 39.6944L692.896 37.6621L688.019 34.174C694.34 23.8594 701.176 13.4156 711.156 6.57794C721.135 -0.25968 735.08 -2.68932 745.304 3.77814C750.612 7.13596 754.365 12.4654 757.372 17.9799C763.418 29.0701 768.748 39.8806 769.535 52.4875C765.737 48.7888 760.192 46.7045 756.393 43.0058C754.712 41.2211 752.806 39.6613 750.724 38.3651C746.752 36.1249 741.998 35.9267 737.551 34.9161C733.811 34.0664 731.385 32.3808 728.555 29.9711C725.19 27.1045 725.053 28.2129 721.654 31.4403C715.753 37.0446 709.847 42.6449 703.938 48.2413Z" fill="#2F2E41"/>
<g id="name">
<path id="." d="M452.75 400.453C452.75 398.953 453.188 397.703 454.062 396.703C454.969 395.703 456.312 395.203 458.094 395.203C459.875 395.203 461.219 395.703 462.125 396.703C463.062 397.703 463.531 398.953 463.531 400.453C463.531 401.891 463.062 403.094 462.125 404.062C461.219 405.031 459.875 405.516 458.094 405.516C456.312 405.516 454.969 405.031 454.062 404.062C453.188 403.094 452.75 401.891 452.75 400.453Z" fill="black"/>
<path id="._2" d="M423.75 400.453C423.75 398.953 424.188 397.703 425.062 396.703C425.969 395.703 427.312 395.203 429.094 395.203C430.875 395.203 432.219 395.703 433.125 396.703C434.062 397.703 434.531 398.953 434.531 400.453C434.531 401.891 434.062 403.094 433.125 404.062C432.219 405.031 430.875 405.516 429.094 405.516C427.312 405.516 425.969 405.031 425.062 404.062C424.188 403.094 423.75 401.891 423.75 400.453Z" fill="black"/>
<path id="._3" d="M393.75 400.453C393.75 398.953 394.188 397.703 395.062 396.703C395.969 395.703 397.312 395.203 399.094 395.203C400.875 395.203 402.219 395.703 403.125 396.703C404.062 397.703 404.531 398.953 404.531 400.453C404.531 401.891 404.062 403.094 403.125 404.062C402.219 405.031 400.875 405.516 399.094 405.516C397.312 405.516 395.969 405.031 395.062 404.062C394.188 403.094 393.75 401.891 393.75 400.453Z" fill="black"/>
<path id="._4" d="M361.75 400.453C361.75 398.953 362.188 397.703 363.062 396.703C363.969 395.703 365.312 395.203 367.094 395.203C368.875 395.203 370.219 395.703 371.125 396.703C372.062 397.703 372.531 398.953 372.531 400.453C372.531 401.891 372.062 403.094 371.125 404.062C370.219 405.031 368.875 405.516 367.094 405.516C365.312 405.516 363.969 405.031 363.062 404.062C362.188 403.094 361.75 401.891 361.75 400.453Z" fill="black"/>
<path id="._5" d="M331.75 400.453C331.75 398.953 332.188 397.703 333.062 396.703C333.969 395.703 335.312 395.203 337.094 395.203C338.875 395.203 340.219 395.703 341.125 396.703C342.062 397.703 342.531 398.953 342.531 400.453C342.531 401.891 342.062 403.094 341.125 404.062C340.219 405.031 338.875 405.516 337.094 405.516C335.312 405.516 333.969 405.031 333.062 404.062C332.188 403.094 331.75 401.891 331.75 400.453Z" fill="black"/>
<path id="._6" d="M301.75 400.453C301.75 398.953 302.188 397.703 303.062 396.703C303.969 395.703 305.312 395.203 307.094 395.203C308.875 395.203 310.219 395.703 311.125 396.703C312.062 397.703 312.531 398.953 312.531 400.453C312.531 401.891 312.062 403.094 311.125 404.062C310.219 405.031 308.875 405.516 307.094 405.516C305.312 405.516 303.969 405.031 303.062 404.062C302.188 403.094 301.75 401.891 301.75 400.453Z" fill="black"/>
</g>
<g id="pass">
<path id="*" d="M395.801 468.721L390.492 467.139L391.301 464.484L396.609 466.453L396.451 460.406H399.141L398.965 466.541L404.186 464.607L404.994 467.279L399.598 468.879L403.078 473.643L400.898 475.295L397.629 470.232L394.465 475.172L392.268 473.572L395.801 468.721Z" fill="black"/>
<path id="*_2" d="M364.801 468.721L359.492 467.139L360.301 464.484L365.609 466.453L365.451 460.406H368.141L367.965 466.541L373.186 464.607L373.994 467.279L368.598 468.879L372.078 473.643L369.898 475.295L366.629 470.232L363.465 475.172L361.268 473.572L364.801 468.721Z" fill="black"/>
<path id="*_3" d="M330.801 468.721L325.492 467.139L326.301 464.484L331.609 466.453L331.451 460.406H334.141L333.965 466.541L339.186 464.607L339.994 467.279L334.598 468.879L338.078 473.643L335.898 475.295L332.629 470.232L329.465 475.172L327.268 473.572L330.801 468.721Z" fill="black"/>
<path id="*_4" d="M300.801 468.721L295.492 467.139L296.301 464.484L301.609 466.453L301.451 460.406H304.141L303.965 466.541L309.186 464.607L309.994 467.279L304.598 468.879L308.078 473.643L305.898 475.295L302.629 470.232L299.465 475.172L297.268 473.572L300.801 468.721Z" fill="black"/>
</g>
</g>
<defs>
<clipPath id="clip0">
<rect width="1075.52" height="646.899" fill="white"/>
</clipPath>
</defs>
</svg>
</div>
            </Col>
          </Row>
        </Container>
      </div>
    )
  }
}

const mapStateToProps = (state) => ({
  auth: state.auth,
  errors: state.errors,
})

export default connect(mapStateToProps, { logIn })(LogIn)
